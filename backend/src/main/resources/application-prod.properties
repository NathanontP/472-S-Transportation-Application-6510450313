# MySQL Datasource (Production) สำหรับเชื่อมต่อกับ MySQL ใน Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://my-mysql:3306/transport_application?serverTimezone=Asia/Bangkok}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}

# JPA (Hibernate)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=none  # ใช้ใน production ไม่ให้ JPA สร้าง/อัพเดต schema โดยอัตโนมัติ
spring.jpa.properties.hibernate.format_sql=true  # เพิ่มความสะดวกในการ debug SQL

# Hibernate Cache (ถ้าใช้)
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.cache.ehcache.config=classpath:ehcache.xml

# Connection Pooling (HikariCP สำหรับ Production)
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.pool-name=HikariCP

# Logging (หากต้องการ log ระดับ production)
logging.level.org.springframework=INFO
logging.level.com.yourcompany=ERROR

spring.email.sender.host=${SPRING_EMAIL_SENDER_HOST}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.debug=true

stripe.api.key.test=${STRIPE_TEST_KEY}
